<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Products - Joski And Sons Stores</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body class="bg-light">

  <div class="d-flex justify-content-between align-items-center mt-3 mb-3">
     <%- include('navbar') %>
  <a href="/dashboard" class="text-decoration-none fw-bold" style="color: #0a3679;">
    <i class="bi bi-arrow-left-circle-fill" style="color: goldenrod; font-size: 1.3rem; vertical-align: middle;"></i>
     
    <span class="ms-1" style="color: #04265a;">Back to Dashboard</span>
  </a>
  </div>


  <div class="container-fluid py-4">
    <h3 class="mb-4">Products</h3>

<!-- Filters Row -->
<div class="row mb-4 g-3"> <!-- g-3 adds spacing between columns both vertically and horizontally -->

  <!-- Filter by Product Code -->
  <div class="col-12 col-sm-6 col-md-3">
    <input type="text" id="filterCode" class="form-control" placeholder="Filter by Product Code" onkeyup="filterTable()">
  </div>

  <!-- Filter by Product Name -->
  <div class="col-12 col-sm-6 col-md-3">
    <input type="text" id="filterName" class="form-control" placeholder="Filter by Product Name" onkeyup="filterTable()">
  </div>

  <!--Filter by remaining quantity-->

  <div class="col-12 col-sm-6 col-md-2">
    <input type="text" id="filterQty" class="form-control" placeholder="Remaining Qty e.g: <5, <=6, >2, >=7, exact)"  onkeyup="filterTable()">
  </div>


  <!-- Import Excel Form -->
  <div class="col-12 col-sm-6 col-md-3">
    <form action="/products/import" method="POST" enctype="multipart/form-data">
      <input type="file" name="excelFile" accept=".xlsx" required class="form-control mb-2">
      <button type="submit" class="btn btn-warning w-100">
        <i class="bi bi-upload"></i> Import Excel
      </button>
    </form>
  </div>

  <!-- Add New Product Button -->
  <div class="col-12 col-sm-6 col-md-3">
    <a href="/products/add" class="btn btn-success w-100">
      <i class="bi bi-plus-lg"></i> Add New Product
    </a>
  </div>

<div style="margin-bottom: 15px;">
  <a href="/products/add" class="btn btn-primary">‚ûï Add Product</a>

  <form action="/products/delete-all" method="POST" style="display:inline;"
        onsubmit="return confirm('‚ö†Ô∏è Are you sure you want to delete ALL products? This cannot be undone!');">
    <button type="submit" class="btn btn-danger">üóëÔ∏è Delete All Products</button>
  </form>
</div>

</div>

    <!-- Products Table -->
    <div class="table-responsive">
      <table class="table table-bordered table-hover align-middle" id="productsTable">
        <thead class="table-dark">
          <tr>
            <th>Product Code</th>
            <th>Product Name</th>
            <th>Sold Qty</th>
            <th>Remaining Qty</th>
            <th>Actual Price</th>
            <th>Selling Price</th>
            <th>Profit Margin</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% products.forEach(product => { %>
            <tr>
              <td><%= product.code %></td>
              <td><%= product.name %></td>
              <td><%= product.soldQty %></td>
              <td><%= product.remainingQty %></td>
              <td>KES. <%= product.actualPrice.toLocaleString() %></td>
              <td>KES. <%= product.sellingPrice.toLocaleString() %></td>
              <td>
                <% 
                  let profit = product.sellingPrice - product.actualPrice;
                  let margin = ((profit / product.actualPrice) * 100).toFixed(1);
                %>
                <span class="text-success fw-bold"><%= profit %> (<%= margin %>%)</span>
              </td>
              <td>
                <% if(product.remainingQty > 0) { %>
                  <span class="badge bg-success">Available</span>
                <% } else { %>
                  <span class="badge bg-danger">Out of Stock</span>
                <% } %>
              </td>
              <td>
                <a href="/products/edit/<%= product.id %>" class="btn btn-sm btn-primary"><i class="bi bi-pencil"></i></a>
                  <form action="/products/delete/<%= product.id %>" method="POST" class="d-inline" onsubmit="return confirm('Delete <%= product.name %>?');">
                    <button type="submit" class="btn btn-sm btn-danger">
                      <i class="bi bi-trash"></i>
                    </button>
                  </form>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
function filterTable() {
  let codeFilter = document.getElementById("filterCode").value.toUpperCase();
  let nameFilter = document.getElementById("filterName").value.toUpperCase();
  let qtyFilter = document.getElementById("filterQty").value.trim();
  
  let table = document.getElementById("productsTable");
  let tr = table.getElementsByTagName("tr");

  for (let i = 1; i < tr.length; i++) {
    let tdCode = tr[i].getElementsByTagName("td")[0];
    let tdName = tr[i].getElementsByTagName("td")[1];
    let tdQty = tr[i].getElementsByTagName("td")[3]; // Remaining Qty column

    if (tdCode && tdName && tdQty) {
      let txtCode = tdCode.textContent || tdCode.innerText;
      let txtName = tdName.textContent || tdName.innerText;
      let txtQty = parseFloat(tdQty.textContent) || 0;

      // Check code & name filters
      let codeMatch = txtCode.toUpperCase().includes(codeFilter);
      let nameMatch = txtName.toUpperCase().includes(nameFilter);

      // Check quantity filter
      let qtyMatch = true;
      if (qtyFilter) {
        let value;
        if (qtyFilter.startsWith("<=")) {
          value = parseFloat(qtyFilter.slice(2));
          qtyMatch = !isNaN(value) ? txtQty <= value : true;
        } else if (qtyFilter.startsWith(">=")) {
          value = parseFloat(qtyFilter.slice(2));
          qtyMatch = !isNaN(value) ? txtQty >= value : true;
        } else if (qtyFilter.startsWith("<")) {
          value = parseFloat(qtyFilter.slice(1));
          qtyMatch = !isNaN(value) ? txtQty < value : true;
        } else if (qtyFilter.startsWith(">")) {
          value = parseFloat(qtyFilter.slice(1));
          qtyMatch = !isNaN(value) ? txtQty > value : true;
        } else {
          value = parseFloat(qtyFilter);
          qtyMatch = !isNaN(value) ? txtQty === value : true;
        }
      }

      // Show/hide row
      tr[i].style.display = (codeMatch && nameMatch && qtyMatch) ? "" : "none";
    }
  }
}
</script>



</body>
</html>

