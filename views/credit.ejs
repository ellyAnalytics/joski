<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Record Credit Sale</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

  <!-- Bootstrap 5 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
    }
    .card {
      border-radius: 12px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.05);
    }
    .form-control, .form-select {
      border-radius: 8px;
    }
    .btn-custom {
      background-color: #0d6efd;
      color: white;
      border-radius: 8px;
      padding: 10px 20px;
      font-weight: 500;
      transition: 0.3s;
    }
    .btn-custom:hover {
      background-color: #0b5ed7;
    }
  </style>
</head>
<body>



  <div class="d-flex justify-content-between align-items-center mt-3 mb-3">
      <%- include('navbar') %>
  <a href="/dashboard" class="text-decoration-none fw-bold" style="color: #0a3679;">
    <i class="bi bi-arrow-left-circle-fill" style="color: goldenrod; font-size: 1.3rem; vertical-align: middle;"></i>
    <span class="ms-1" style="color: #04265a;">Back to Dashboard</span>
  </a>
  </div>

  <div class="container py-5">
    <div class="row justify-content-center">
      <div class="col-lg-6 col-md-8">
        <div class="card p-4">
          <h3 class="text-center mb-4 text-primary">Record Credit Sale</h3>
        
          <% if (typeof error !== "undefined" && error) { %>
          <div class="alert alert-danger alert-dismissible fade show" role="alert">
             <i class="bi bi-exclamation-triangle-fill"></i>
           <%= error %>
           <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
         </div>
          <% } %>
          
          <form action="/credit" method="POST" class="needs-validation" novalidate>
            <!-- Customer Name -->
            <div class="mb-3">
              <label for="customerName" class="form-label">Customer Name</label>
              <input type="text" class="form-control" id="customerName" name="customerName" placeholder="Enter customer name" required>
              <div class="invalid-feedback">Customer name is required.</div>
            </div>

            <!-- Phone -->
            <div class="mb-3">
              <label for="phone" class="form-label">Phone Number</label>
              <input type="tel" class="form-control" id="phone" name="phone" placeholder="e.g. 0712 345 678" required>
              <div class="invalid-feedback">Phone number is required.</div>
            </div>

            <!-- Phone -->
            <div class="mb-3">
              <label for="nationalID" class="form-label">nationalID</label>
              <input type="text" class="form-control" id="nationalID" name="nationalID" placeholder="e.g. 393...45" required>
              <div class="invalid-feedback">nationalID is required.</div>
            </div>

            <!-- Product Name -->
            <div class="mb-3 position-relative">
                <label for="productName" class="form-label">Product Name</label>
                <input type="text" class="form-control" id="productName" name="productName" placeholder="Type product name..." required autocomplete="off">
                <div id="suggestions" class="list-group position-absolute w-100 shadow-sm" style="z-index:1000;"></div>
                <div class="invalid-feedback">Product name is required.</div>
            </div>

            <!-- Product Code -->
            <div class="mb-3">
              <label for="productCode" class="form-label">Product Code</label>
              <input type="text" class="form-control" id="productCode" name="productCode" placeholder="Enter product code" readonly>
              <div class="invalid-feedback">Product code is required.</div>
            </div>

            
            <!-- Quantity -->
            <div class="mb-3">
                <label for="quantity" class="form-label">Quantity</label>
                <input type="number" class="form-control" id="quantity" name="qty" value="1" min="1" required>
            </div>


            <!-- Total Amount -->
            <div class="mb-3">
              <label for="total" class="form-label">Total Amount</label>
              <input type="number" class="form-control" id="total" name="total" placeholder="Enter total amount"  readonly>
              <div class="invalid-feedback">Total amount is required.</div>
            </div>

            <!-- Amount Paid -->
            <div class="mb-3">
              <label for="paid" class="form-label">Amount Paid</label>
              <input type="number" class="form-control" id="paid" name="paid" placeholder="Enter paid amount" min="0" required>
              <div class="invalid-feedback">Paid amount is required.</div>
            </div>

            <!-- Payment Mode -->
            <div class="mb-3">
              <label for="paymentMode" class="form-label">Payment Mode</label>
              <select class="form-select" id="paymentMode" name="paymentMode" required>
                <option value="">-- Select Mode --</option>
                <option value="Cash">Cash</option>
                <option value="Mpesa">Mpesa</option>
                <option value="Bank">Bank</option>
              </select>
              <div class="invalid-feedback">Please select a payment mode.</div>
            </div>

            <!-- Buttons -->
            <div class="d-grid">
              <button type="submit" class="btn btn-custom">Save Credit</button>
              <a href="/credit-report" class="btn btn-outline-secondary mt-2">View Credit Report</a>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap Validation Script -->
  <script>
    (() => {
      'use strict'
      const forms = document.querySelectorAll('.needs-validation')
      Array.from(forms).forEach(form => {
        form.addEventListener('submit', event => {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }
          form.classList.add('was-validated')
        }, false)
      })
    })()
  </script>
  <script>
  let selectedProduct = null;

  // Search products as user types
  document.getElementById("productName").addEventListener("input", function() {
    const term = this.value.trim();
    const suggestions = document.getElementById("suggestions");

    if (term.length < 1) {
      suggestions.innerHTML = "";
      return;
    }

    fetch(`/api/products/search-credit?term=${encodeURIComponent(term)}`)
      .then(res => res.json())
      .then(data => {
        suggestions.innerHTML = "";
        data.forEach(p => {
          const item = document.createElement("button");
          item.type = "button";
          item.className = "list-group-item list-group-item-action";
          item.textContent = `${p.name} (Code: ${p.code}) - KES ${p.sellingPrice}`;
          item.onclick = () => selectProduct(p);
          suggestions.appendChild(item);
        });
      });
  });

  // Select a product from suggestions
  function selectProduct(p) {
    selectedProduct = p;
    document.getElementById("productName").value = p.name;
    document.getElementById("productCode").value = p.code;
    document.getElementById("total").value = p.sellingPrice; // initial total
    document.getElementById("quantity").value = 1;
    document.getElementById("suggestions").innerHTML = "";
    calculateTotal();
  }

  // Recalculate total when quantity changes
  document.getElementById("quantity").addEventListener("input", calculateTotal);
  function calculateTotal() {
    if (!selectedProduct) return;
    const qty = parseInt(document.getElementById("quantity").value) || 1;
    document.getElementById("total").value = qty * selectedProduct.sellingPrice;
  }
</script>
<script>
  (() => {
    'use strict'
    const forms = document.querySelectorAll('.needs-validation')
    Array.from(forms).forEach(form => {
      form.addEventListener('submit', event => {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagation()
        }

        // Custom credit validation
        const total = parseFloat(document.getElementById("total").value) || 0;
        const paid = parseFloat(document.getElementById("paid").value) || 0;

        if (paid === total) {
          event.preventDefault();
          event.stopPropagation();
          alert("This is a full payment, please make a normal sale instead.");
          return;
        }

        if (paid > total) {
          event.preventDefault();
          event.stopPropagation();
          alert("Paid amount cannot exceed total amount.");
          return;
        }

        form.classList.add('was-validated')
      }, false)
    })
  })()
</script>

<!-- Bootstrap Bundle with Popper.js (required for dismissible alerts, dropdowns, modals, etc.) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

</body>
</html>
