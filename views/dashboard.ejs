<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Joski and Sons Stores</title>

  <!-- Bootstrap & Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

  <!-- Page CSS -->
  <link rel="stylesheet" href="/css/dashboard.css">

</head>
<body class="bg-light">

  <!-- Top Navbar -->
  <nav class="navbar navbar-light bg-white shadow-sm sticky-top">
    <div class="container-fluid">
      <button class="btn btn-outline-secondary d-lg-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebarOffcanvas" aria-controls="sidebarOffcanvas">
        <i class="bi bi-list"></i>
      </button>
      <span class="navbar-brand mb-0 h5">Joski and Sons Stores</span>
      <span class="text-muted d-none d-sm-inline"><i class="bi bi-person-circle"></i> Joski </span>
    </div>
  </nav>

  <div class="container-fluid">
    <div class="row">
      <!-- Sidebar (large screens) -->
      <aside class="col-lg-2 d-none d-lg-block sidebar bg-dark text-white p-3">
        <h5 class="text-center mb-3">Joski and Sons Stores</h5>
        <ul class="nav flex-column gap-1">
          <li class="nav-item"><a class="nav-link active" href="/dashboard"><i class="bi bi-speedometer2 me-2"></i>Dashboard</a></li>
          <li class="nav-item"><a class="nav-link" href="/products"><i class="bi bi-box-seam me-2"></i>Products</a></li>
          <li class="nav-item"><a class="nav-link" href="/sales-report"><i class="bi bi-bar-chart-line me-2"></i>Sales Report</a></li>
          <li class="nav-item"><a class="nav-link" href="/credit-report"><i class="bi bi-bar-chart-line me-2"></i>Credit Report</a></li>
          <li class="nav-item"><a class="nav-link" href="/credit"><i class="bi bi-bar-chart-line me-2"></i>Add New Credit</a></li>
          <li class="nav-item"><a class="nav-link" href="/users"><i class="bi bi-person-circle me-2"></i>Profiles</a></li>
          <li class="nav-item mt-2"><a class="nav-link text-danger" href="/logout"><i class="bi bi-box-arrow-right me-2"></i>Logout</a></li>
        </ul>
      </aside>

      <!-- Offcanvas Sidebar (mobile / tablet) -->
      <div class="offcanvas offcanvas-start" tabindex="-1" id="sidebarOffcanvas">
        <div class="offcanvas-header">
          <h5 class="offcanvas-title">Joski and Sons Stores</h5>
          <button type="button" class="btn-close" data-bs-dismiss="offcanvas"></button>
        </div>
        <div class="offcanvas-body">
          <ul class="nav flex-column gap-1">
            <li class="nav-item"><a class="nav-link" href="/dashboard"><i class="bi bi-speedometer2 me-2"></i>Dashboard</a></li>
            <li class="nav-item"><a class="nav-link" href="/products"><i class="bi bi-box-seam me-2"></i>Products</a></li>
            <li class="nav-item"><a class="nav-link" href="/sales-report"><i class="bi bi-bar-chart-line me-2"></i>Sales Report</a></li>
            <li class="nav-item"><a class="nav-link" href="/credit-report"><i class="bi bi-bar-chart-line me-2"></i>Credit Report</a></li>
          <li class="nav-item"><a class="nav-link" href="/credit"><i class="bi bi-bar-chart-line me-2"></i>Add New Credit</a></li>
            <li class="nav-item"><a class="nav-link" href="/users"><i class="bi bi-person-circle me-2"></i>Profile</a></li>
            <li class="nav-item mt-2"><a class="nav-link text-danger" href="/logout"><i class="bi bi-box-arrow-right me-2"></i>Logout</a></li>
          </ul>
        </div>
      </div>
      <!-- Main -->
<main class="col-12 col-lg-10 p-3 p-lg-4">

        <!-- Date (top left) & Time (top right) -->
<div class="d-flex justify-content-between align-items-center mb-3">
  <div class="date-display text-primary">
    <strong>Date:</strong> <%= todayDate %>
  </div>
  <div id="clock" class="time-display text-dark">
    <strong>Time:</strong> --:--:--
  </div>
</div>

        <!-- Metrics row (auto responsive) -->
  <div class="row row-cols-1 row-cols-sm-2 row-cols-xl-4 g-3">

  <div class="col">
    <div class="card metric shadow-sm p-3 hover-zoom">
      <h6 class="text-muted"><i class="bi bi-box-seam me-1"></i>Total Products</h6>
      <h3 class="fw-bold mb-0"><%= totalProducts %></h3>
    </div>
  </div>

  <div class="col">
    <div class="card metric shadow-sm p-3 hover-zoom">
      <h6 class="text-muted"><i class="bi bi-currency-dollar me-1"></i>Today's Revenue</h6>
      <h3 class="fw-bold text-success mb-0">Ksh. <%= todaysRevenue.toLocaleString() %></h3>
    </div>
  </div>

  <div class="col">
    <div class="card metric shadow-sm p-3 hover-zoom <%= userRole === 'cashier' ? 'blur-card' : '' %>">
      <h6 class="text-muted"><i class="bi bi-graph-up me-1"></i>Today's Profit</h6>
      <h3 class="fw-bold text-primary mb-0">Ksh. <%= todaysProfit.toLocaleString() %></h3>
    </div>
  </div>

  <div class="col">
  <div class="card metric shadow-sm p-3 hover-zoom">
    <h6 class="text-muted"><i class="bi bi-currency-dollar me-1"></i>This Month's Revenue</h6>
    <h3 class="fw-bold text-success mb-0">Ksh. <%= monthsRevenue.toLocaleString() %></h3>
  </div>
</div>

<div class="col">
  <div class="card metric shadow-sm p-3 hover-zoom <%= userRole === 'cashier' ? 'blur-card' : '' %>">
    <h6 class="text-muted"><i class="bi bi-graph-up me-1"></i>This Month's Profit</h6>
    <h3 class="fw-bold text-primary mb-0">Ksh. <%= monthsProfit.toLocaleString() %></h3>
  </div>
</div>


 <div class="col">
  <div class="card metric shadow-sm p-3 border border-danger-subtle hover-zoom"
       role="button"
       data-bs-toggle="modal"
       data-bs-target="#lowStockModal">
    <h6 class="text-danger">
      <i class="bi bi-bell me-1"></i>Products &lt; 5
    </h6>
    <h3 class="text-danger mb-0"><%= lowStockProducts.length %></h3>
  </div>
 </div>


  <div class="col">
    <div class="card metric shadow-sm p-3 border border-warning-subtle hover-zoom"
        role="button"
        data-bs-toggle="modal"
        data-bs-target="#creditsModal">
      <h6 class="gradient-text">
      <i class="bi bi-exclamation-octagon me-1"></i>In Debt (Customers)
      </h6>
      <h3 class="text-warning mb-0"><%= creditReport %></h3>
    </div>
  </div>


  <div class="col">
    <div class="card shadow-sm p-3 hover-zoom">
      <h6 class="text-muted"><i class="bi bi-bar-chart-line me-1"></i>Sales Report</h6>
      <a href="/sales-report" class="btn btn-outline-primary btn-sm mt-2">View Report</a>
    </div>
  </div>
</div>


<hr class="my-4">

<!-- Cart Section -->
<div class="card shadow-sm p-3">
  <h5 class="mb-3">Make Sales</h5>

  <!--Error alert-->
  <!-- Error alert -->
<div id="errorAlert" class="alert alert-danger d-none" role="alert"></div>


  <!-- Filters / Inputs -->
  <form id="cartForm" class="row g-2 mb-3">
    <div class="col-md-3">
      <input type="text" id="productCode" class="form-control" placeholder="Product Code" readonly>
    </div>
    <div class="col-md-3">
      <div class="position-relative">
        <input type="text" id="productName" class="form-control" placeholder="Product" required autocomplete="off">
        <div id="suggestionsBox" class="dropdown-menu w-100"></div>
      </div>

    </div>
    <div class="col-md-2">
      <input type="number" id="quantity" class="form-control" placeholder="Qty" value="1" min="1" required>
    </div>
    <div class="col-md-2">
      <input type="number" id="price" class="form-control" placeholder="Price" min="1" readonly>
    </div>
    <div class="col-md-2">
      <button type="submit" class="btn btn-success w-100"><i class="bi bi-cart-plus"></i> Add to Cart</button>
    </div>
  </form>

  <!-- Cart Table -->
  <div class="table-responsive">
    <table class="table table-bordered align-middle text-center" id="cartTable">
      <thead class="table-dark">
        <tr>
          <th>Product Code</th>
          <th>Product Name</th>
          <th>Qty</th>
          <th>Price</th>
          <th>Amount</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        <!-- Rows will be added dynamically -->
      </tbody>
      <tfoot>
        <tr>
          <td colspan="4" class="text-end fw-bold">Total:</td>
          <td colspan="2" id="cartTotal" class="fw-bold">Ksh. 0</td>
        </tr>
      </tfoot>
    </table>
  </div>

  <!-- Proceed Button-->
<button id="checkoutBtn" class="btn btn-primary">
  <i class="bi bi-arrow-right-circle"></i> Proceed
</button>

<!-- Low Stock Modal -->
<div class="modal fade" id="lowStockModal" tabindex="-1" aria-labelledby="lowStockModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="lowStockModalLabel">
          <i class="bi bi-bell"></i> Low Stock Products
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <% if (lowStockProducts.length > 0) { %>
          <div class="table-responsive">
            <table class="table table-striped table-bordered">
              <thead>
                <tr class="text-center">
                  <th>Product Name</th>
                  <th>Product Code</th>
                  <th>Remaining Qty</th>
                </tr>
              </thead>
              <tbody>
                <% lowStockProducts.forEach(product => { %>
                  <tr class="text-center">
                    <td><%= product.name %></td>
                    <td><%= product.code %></td>
                    <td><%= product.remainingQty %></td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        <% } else { %>
          <p class="text-muted text-center mb-0">No low stock products 🎉</p>
        <% } %>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>


<!-- Credits (In Debt Customers) Modal -->
<div class="modal fade" id="creditsModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-scrollable">
    <div class="modal-content p-3">
      <div class="modal-header">
        <h5 class="modal-title">Customers in Debt</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <% if (credits && credits.length > 0) { %>
          <div class="table-responsive">
            <table class="table table-bordered align-middle text-center">
              <thead class="table-dark">
                <tr>
                  <th>Name</th>
                  <th>Phone</th>
                  <th>Product</th>
                  <th>Total</th>
                  <th>Paid</th>
                  <th>Balance</th>
                </tr>
              </thead>
              <tbody>
                <% credits.forEach(c => { %>
                  <tr>
                    <td><%= c.customerName %></td>
                    <td><%= c.phone %></td>
                    <td><%= c.productName %></td>
                    <td>Ksh. <%= c.total.toLocaleString() %></td>
                    <td>Ksh. <%= c.paid.toLocaleString() %></td>
                    <td class="text-danger fw-bold">Ksh. <%= (c.total - c.paid).toLocaleString() %></td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        <% } else { %>
          <p class="text-muted mb-0">✅ All customers have cleared their balances.</p>
        <% } %>
      </div>
    </div>
  </div>
</div>


<!-- Checkout Modal -->
<div class="modal fade" id="checkoutModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content p-3">
      <div class="modal-header">
        <h5 class="modal-title">Check Out</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="paidAmount" class="form-label">Paid Amount</label>
          <input type="number" id="paidAmount" class="form-control" placeholder="Enter amount paid" min="1" required>
        </div>
        <div class="mb-3">
          <label for="paymentMode" class="form-label">Payment Mode</label>
          <select id="paymentMode" class="form-select">
            <option value="cash" selected>Cash</option>
            <option value="mpesa">M-Pesa</option>
            <option value="cheque">Cheque</option>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button id="submitCheckout" class="btn btn-success w-100">Submit</button>
      </div>
    </div>
  </div>
</div>
<!-- Success Modal -- Old Receipt Modal>
<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content p-3 text-center">
      <div class="modal-header">
        <h5 class="modal-title">✅ Sale Complete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <p id="invoiceInfo"></p>
      </div>
      <div class="modal-footer d-flex gap-2">
        <!-- Print Button -->
        <button id="printReceipt" class="btn btn-warning w-50">
          🖨️ Print Receipt
        </button>
        
        <!-- Back to dashboard -->
        <a href="/dashboard" class="btn btn-primary w-50">
          Make New Sale
        </a>
      </div>
    </div>
  </div>
</div>




<!-- Hidden Receipt Template -->
<div id="receipt" style="display:none; font-family: monospace; width:220px; font-size:11px; line-height:1.3;">
  <!-- ===== HEADER ===== -->
  <h4 style="text-align:center; margin:2px 0;">JOSKI AND SONS STORES</h4>
  <p style="text-align:center; margin:0;">Tel: 0792 928 876</p>
  <p style="text-align:center; margin:0;">KRA PIN: A008950002K</p>
  <hr style="margin:4px 0;">

  <!-- ===== INVOICE INFO ===== -->
  <p id="receiptInvoice" style="margin:0;"></p>
  <p id="receiptDate" style="margin:0;"></p>
  <p id="receiptTime" style="margin:0;"></p>
  <hr style="margin:4px 0;">

  <!-- ===== ITEMS ===== -->
  <table style="width:100%; font-size:11px;">
    <thead>
      <tr>
        <th style="text-align:left;">Item</th>
        <th style="text-align:right;">Qty</th>
        <th style="text-align:right;">Price</th>
      </tr>
    </thead>
    <tbody id="receiptItems"></tbody>
  </table>
  <hr style="margin:4px 0;">

  <!-- ===== TOTALS (2-column) ===== -->
  <table style="width:100%; font-size:11px;">
    <tr>
      <td><strong>Total</strong></td>
      <td style="text-align:right;"><span id="receiptTotal"></span></td>
    </tr>
    <tr>
      <td><strong>Paid</strong></td>
      <td style="text-align:right;"><span id="receiptPaid"></span></td>
    </tr>
    <tr>
      <td><strong>Balance</strong></td>
      <td style="text-align:right;"><span id="receiptBalance"></span></td>
    </tr>
    <tr>
      <td><strong>Mode</strong></td>
      <td style="text-align:right;"><span id="receiptMode"></span></td>
    </tr>
  </table>
  <hr style="margin:4px 0;">

  <!-- ===== FOOTER ===== -->
  <div style="text-align:center; font-size:10px; line-height:1.3;">
    <p style="margin:2px;">Thank you for shopping with us.</p>
    <p style="margin:2px;">Goods Once Sold Can't be Returned.</p>
    <p style="margin:2px;">Served by <strong>Faith Mwende.</strong></p>
  </div>
</div>


<script>
const cartForm = document.getElementById("cartForm");
const cartTableBody = document.querySelector("#cartTable tbody");
const cartTotal = document.getElementById("cartTotal");
let total = 0;

// ========================
// Add to Cart (single handler)
cartForm.addEventListener("submit", async function (e) {
  e.preventDefault();

  const name = document.getElementById("productName").value.trim();
  const qty = parseInt(document.getElementById("quantity").value);
  if (!name || qty <= 0) return;

  // ✅ Fetch full product details
  const res = await fetch(`/api/product?name=${name}`);
  const product = await res.json();

  if (!product || !product.code) {
    showError("❌ Product not found in database!");
    return;
  }

   // 🚫 Check stock
  if (product.remainingQty <= 0) {
    showError(`❌ ${product.name} is OUT OF STOCK!`);
    return;
  }

  if (qty > product.remainingQty) {
    showError(`❌ Only ${product.remainingQty} left in stock!`);
    return;
  }

  const sellingPrice = product.sellingPrice;
  const actualPrice = product.actualPrice;   // ✅ from DB
  const code = product.code;
  const amount = qty * sellingPrice;
  total += amount;

  const row = document.createElement("tr");
  row.innerHTML = `
    <td>${code}</td>
    <td>${product.name}</td>
    <td>${qty}</td>
    <td data-actual="${actualPrice}">Ksh. ${sellingPrice.toLocaleString()}</td>   <!-- store actualPrice here -->
    <td>Ksh. ${amount.toLocaleString()}</td>
    <td><button class="btn btn-danger btn-sm removeBtn">Remove</button></td>
  `;

  row.querySelector(".removeBtn").addEventListener("click", function () {
    total -= amount;
    cartTotal.textContent = "Ksh. " + total.toLocaleString();
    row.remove();
  });

  cartTableBody.appendChild(row);
  cartTotal.textContent = "Ksh. " + total.toLocaleString();

  cartForm.reset();
  document.getElementById("quantity").value = 1;
});



// Auto-fill product details by code
document.getElementById("productCode").addEventListener("blur", async () => {
  const code = document.getElementById("productCode").value.trim();
  if (!code) return;

  const res = await fetch(`/api/product?code=${code}`);
  const product = await res.json();

  if (product && product.name) {
    document.getElementById("productName").value = product.name;
    document.getElementById("price").value = product.sellingPrice;
  }
});

// Auto-fill product details by name
document.getElementById("productName").addEventListener("blur", async () => {
  const name = document.getElementById("productName").value.trim();
  if (!name) return;

  const res = await fetch(`/api/product?name=${name}`);
  const product = await res.json();

  if (product && product.code) {
    document.getElementById("productCode").value = product.code;
    document.getElementById("price").value = product.sellingPrice;
  }
});


  //Checkout

  const checkoutBtn = document.getElementById("checkoutBtn");
  const submitCheckout = document.getElementById("submitCheckout");

  // Show modal on Proceed click
  checkoutBtn.addEventListener("click", () => {
    const rows = document.querySelectorAll("#cartTable tbody tr");
    if (rows.length === 0) {
      alert("Cart is empty!");
      return;
    }
    const modal = new bootstrap.Modal(document.getElementById("checkoutModal"));
    modal.show();
  });

  // Handle Submit in modal
// Handle Submit in modal
submitCheckout.addEventListener("click", async () => {
  const rows = document.querySelectorAll("#cartTable tbody tr");
  let cart = [];
  rows.forEach(r => {
    const code = r.children[0].textContent;
    const name = r.children[1].textContent;
    const qty = parseInt(r.children[2].textContent);
    const price = parseFloat(
    r.children[3].textContent.replace("Ksh. ", "").replace(/,/g, "")
    );
    const actualPrice = parseFloat(r.children[3].getAttribute("data-actual")); // ✅ buying price
    cart.push({ productCode: code, productName: name, qty, price, actualPrice });
  });

  const paidAmount = parseFloat(document.getElementById("paidAmount").value);
  const paymentMode = document.getElementById("paymentMode").value;
  if (isNaN(paidAmount) || paidAmount <= 0) {
    alert("Please enter a valid paid amount.");
    return;
  }

  const res = await fetch("/checkout", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ cart, paidAmount, paymentMode })
  });

  const data = await res.json();
  if (data.success) {
    cartTableBody.innerHTML = "";
    total = 0;
    cartTotal.textContent = "Ksh. 0";
    cartForm.reset();
    bootstrap.Modal.getInstance(document.getElementById("checkoutModal")).hide();

  // ✅ Generate receipt contents
  generateReceipt(cart, data.total, paidAmount, (data.total - paidAmount), paymentMode);

  // ✅ Trigger print preview
  const receiptContent = document.getElementById("receipt").innerHTML;
  const printWindow = window.open("", "_blank", "width=250,height=600");
  printWindow.document.write(`
    <html>
      <head>
        <title>Receipt</title>
        <style>
          body { font-family: monospace; font-size:11px; width:220px; line-height:1.3; }
        </style>
      </head>
      <body>${receiptContent}</body>
    </html>
  `);
  printWindow.document.close();
  // 🔹 Call print dialog automatically
  printWindow.print();

  // ✅ Refresh dashboard immediately (in background)
  window.location.reload();
} else {
  alert("❌ Error: " + data.error);
} 
});

//Cart Form error alert
  const errorAlert = document.getElementById("errorAlert");

  function showError(msg) {
    errorAlert.textContent = msg;
    errorAlert.classList.remove("d-none");
    setTimeout(() => errorAlert.classList.add("d-none"), 3000);
  }

  // Validate product before adding to cart
  
  // Autocomplete product name
const productNameInput = document.getElementById("productName");
const suggestionsBox = document.getElementById("suggestionsBox");

productNameInput.addEventListener("input", async () => {
  const q = productNameInput.value.trim();
  if (q.length < 1) {
    suggestionsBox.classList.remove("show");
    return;
  }

  const res = await fetch(`/api/products/search?q=${q}`);
  const names = await res.json();

  if (names.length === 0) {
    suggestionsBox.classList.remove("show");
    return;
  }

  suggestionsBox.innerHTML = names
    .map(n => `<button type="button" class="dropdown-item">${n}</button>`)
    .join("");
  suggestionsBox.classList.add("show");
});

// When clicking suggestion
suggestionsBox.addEventListener("click", async (e) => {
  if (e.target.classList.contains("dropdown-item")) {
    const name = e.target.textContent;
    productNameInput.value = name;
    suggestionsBox.classList.remove("show");

    // Autofill code & price from DB
    const res = await fetch(`/api/product?name=${name}`);
    const product = await res.json();
    if (product && product.code) {
      document.getElementById("productCode").value = product.code;
      document.getElementById("price").value = product.sellingPrice;
    }
  }
});


// Receipt

function generateReceipt(cartItems, total, paid, balance, mode) {
  // === Invoice Info ===
  const now = new Date();
  document.getElementById("receiptInvoice").textContent = "Receipt No: RCPT-" + Date.now();
  document.getElementById("receiptDate").textContent = "Date: " + now.toLocaleDateString();
  document.getElementById("receiptTime").textContent = "Time: " + now.toLocaleTimeString();

  // === Items ===
  const itemsTable = document.getElementById("receiptItems");
  itemsTable.innerHTML = ""; // clear previous

  cartItems.forEach(item => {
    let row = document.createElement("tr");

    let tdName = document.createElement("td");
    tdName.textContent = item.productName;
    tdName.style.textAlign = "left";

    let tdQty = document.createElement("td");
    tdQty.textContent = item.qty;
    tdQty.style.textAlign = "right";

    let tdPrice = document.createElement("td");
    tdPrice.textContent = "Ksh. " + item.price.toLocaleString();
    tdPrice.style.textAlign = "right";

    row.appendChild(tdName);
    row.appendChild(tdQty);
    row.appendChild(tdPrice);

    itemsTable.appendChild(row);
  });

  // === Totals ===
  document.getElementById("receiptTotal").textContent = total.toLocaleString();
  document.getElementById("receiptPaid").textContent = paid.toLocaleString();
  document.getElementById("receiptBalance").textContent = balance.toLocaleString();
  document.getElementById("receiptMode").textContent = mode;

}

</script>





  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Live clock
    function updateClock(){
      const el = document.getElementById('clock');
      if (!el) return;
      el.textContent = new Date().toLocaleTimeString();
    }
    updateClock();
    setInterval(updateClock, 1000);
  </script>

</body>
</html>
